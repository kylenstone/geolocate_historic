<h1> Assignment 3 for COMP 120 @ Tufts </h1>
<a href="http://www.cs.tufts.edu/comp/120/assignments/a3.php">link to actual assignment</a>
<h2>Assignment 3: Geolocation and National Historic Places</h2>
<h3>Due: Thursday, April 15th at 11:30 PM</h3>

<h3>Overview</h3>

<p>Geolocation is currently the hottest tech trend and area of development.  In this assignment, you will build a Ruby on Rails web application with desktop and mobile interfaces that detects and stores your location, and returns the nearest historic places within three (3) miles (relative distance).  We will only use historic places in the northeast region provided by the <a href="http://www.nps.gov/nr/" target="_blank">National Register of Historic Places</a>.  In addition, this application returns a list of your last ten (10) locations in XML or JSON format.</p>

<h3>Requirements</h3>
<ul>
<li>Two models will be necessary: one for historic place and one for user's location.  For the latitude and longitude in each model, use decimal data type with precision = 10, scale = 6</li>
<li>Download list of historic places in the northeast region provided by the National Register of Historic Places: <a href="ne_landmarks.zip"><code>ne_landmarks.zip</code></a> (CSV, comma-separated, file compressed to ZIP).  The list has 18,246 records.  Write a Ruby script to parse the CSV file and create a SQL file of insert statements for the historic places table in MySQL.  The CSV file has four (4) columns:
<ol>
<li>Longitude</li>

<li>Latitude</li>
<li>Name (of historic place)</li>
<li>Info (on historic place that you can use for popup balloon when its marker on Google Map is clicked)</li>
</ol>
</li>
<li>You will need to use the Google Maps API.  <a href="https://wikis.uit.tufts.edu/confluence/display/comp15004visualization/API+Programming">Please refer to my guest lecture to Sara Su's COMP 150-VIZ: Visualization class on how to use the Google Maps API</a>.</li>
<li>There are couple of ways to determine a user's location on a web browser:
<ol>
<li>Geocode the client's (your computer's) IP address via free service such as <a href="http://www.hostip.info/" target="_blank">hostip.info</a>.  This will work on all browsers including Safari and Microsoft Internet Explorer, but may not be very accurate!</li>

<li>Use the JavaScript <a href="https://developer.mozilla.org/En/Using_geolocation" target="_blank"><code>navigator.geolocation</code></a> object.  If you use a desktop/laptop browser, it will use the Google Location Services.  If you use Safari on an iPhone, it will use your coordinates via GPS!  The drawback is that the <code>navigator.geolocation</code> is not supported in Microsoft Internet Explorer or in Safari (desktop/laptop).</li>
</ol>
</li>
<li>Make your starting URL to be <code>http://localhost:9000/a3</code>.  On accessing the page, user shall be prompted to share location.  See my MBTA map example: <a href="/~mchow/mbta_gmap/">http://www.cs.tufts.edu/~mchow/mbta_gmap/</a></li>
<li>After user shares location (i.e., the latitude and longitude of user are known), find the historic places within three (3) miles of the user's location and store the location into the table of users' locations</li>

<li>The view shall contain:
<ol>
<li>A Google Map with a marker denoting the user's location and markers for each nearby historic place.  The map shall be centered on the user's location.  The markers for the user's location for each of the historic places shall be different (e.g., one red, one blue).</li>
<li>A table of distances to each nearby historic place sorted by the closest historic place.</li>
<li>Two links to download user's last ten (10) locations with created-on date: one for XML format and one for JSON format.</li>
</ol>
</li>
<li>Enable the web application to be accessed from multiple devices, at the very least, one for standard web browser and one for mobile browser (i.e., iPhone).  Options:
<ol>
<li>Have multiple stylesheets, all combined by adding a <code>:all, :cache =&gt; true</code> to your <code>stylesheet_link_tag</code></li>

<li>Use a mobile framework such as <a href="http://code.google.com/p/iui/" target="_blank">iUI</a> or <a href="http://www.jqtouch.com/" target="_blank">jQTouch</a></li>
</ol>
</li>
</ul>

<h3>Grading</h3>
<ol>
<li><strong>(1 point)</strong> Ruby script to parse CSV and create SQL file of insert statements.  An alternative method is also accepted (e.g., bulk-load directly into MySQL) but please note what you did.</li>

<li><strong>(1 point)</strong> Use either two stylesheets (one for standard browser and one for mobile / device browser) or a development framework like iUI or jQTouch</li>
<li><strong>(1 point)</strong> Detect user's location and return latitude and longitude</li>
<li><strong>(1 point)</strong> Store user's location</li>
<li><strong>(2 points)</strong> View with Google Map denoting the user's location and markers for each nearby historic place</li>
<li><strong>(1 point)</strong> Two links to download user's last ten (10) locations with created-on date: one for XML format and one for JSON format</li>

<li><strong>(1 point)</strong> Configure the <code>routes.rb</code> file so that the starting page is <code>http://localhost:9000/a3</code></li>
<li><strong>(1 point)</strong> Use correct algorithm to find the historic places within three (3) miles of the user's location</li>
<li><strong>(1 point)</strong> Answer three questions:
<ol>
<li>How long does it take (in seconds) to find all the historic places?</li>

<li>How long does it take (in seconds) to find all the historic places within three (3) miles of user's location?</li>
<li>How long does it take (in seconds) to find all the historic places within ten (10) miles of user's location?</li>
</ol>
</li>
<li><strong>(BONUS +1 point)</strong> Write an XML-RPC web service to add user's location to database and generate XML and JSON feeds of user's last ten (10) locations.</li>
</ol>

<h3>Submitting the Assignment</h3>
<ul>
<li>Submit your compiled and compressed (in a ZIP or tarball) application application via <code>provide comp120 a3 &lt;FILE&gt;</code>.  Example: <code>provide comp120 a3 a3.zip</code></li>

<li>You are allowed a maximum of two (2) submissions.</li>
<li>File must not be bigger than 10MB.</li>
<li>Lateness is one (1) point per each two (2) days late.</li>
</ul>

<h3>Notes</h3>
<ul>
<li>There are many resources on the web that provide details on how to calculate the relative distance between two geocodes.  Here is one: <a href="http://zcentric.com/2010/03/11/calculate-distance-in-mysql-with-latitude-and-longitude/" target="_blank">http://zcentric.com/2010/03/11/calculate-distance-in-mysql-with-latitude-and-longitude/</a></li>
</ul>

<hr/>

<p><em><a href="mailto:mchow@cs.tufts.edu">mchow@cs.tufts.edu</a></em></p>
<p><a href="http://validator.w3.org/check?uri=referer" target="_blank"><img src="http://www.w3.org/Icons/valid-xhtml10-blue" alt="Valid XHTML 1.0 Transitional" height="31" width="88" border="0"/></a></p>

